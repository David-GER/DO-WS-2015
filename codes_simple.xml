<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<codes>
  <autosave>

	int i;
	int farben[] = { RED, BLUE, GREEN, OLIVE, YELLOW, 0xCDD718};
	for( i=0; i&lt;130; i++ ) {
		farbe(i, farben[i % (sizeof( farben) / sizeof( int )) ] );
	}

	</autosave>
  <snippet name="modulo0">
    <codeA><![CDATA[

		int i;
		int farben[] = { RED, BLUE, GREEN, OLIVE, YELLOW, 0xCDD718};
		for( i=0; i<130; i++ ) {
			farbe(i, farben[i % (sizeof( farben) / sizeof( int )) ] );
		}

		]]></codeA>
    <author>Hans</author>
    <updated>Thu Sep 17 10:29:05 CEST 2015</updated>
    <updated>Fri Nov 13 19:03:42 CET 2015</updated>
    <updated>Fri Nov 13 19:04:17 CET 2015</updated>
    <updated>Fri Nov 13 19:08:27 CET 2015</updated>
    <tag>a</tag>
    <tag>b</tag>
    <tag>c</tag>
    <tag>d</tag>
    <tag>e</tag>
    <tag>f</tag>
    <tag>g</tag>
  </snippet>
  <snippet name="modulo1">
    <codeA><![CDATA[

		int i;
		int farben[] = { RED, BLUE, GREEN, OLIVE, YELLOW, 0xCDD718};
		for( i=0; i<130; i++ ) {
			farbe(i, farben[i % (sizeof( farben) / sizeof( int )) ] );
		}

		]]></codeA>
  </snippet>
  <snippet name="modulo2">
    <codeA><![CDATA[

		int i;
		int farben[] = { RED, BLUE, GREEN, OLIVE, YELLOW, 0xCDD718};
		for( i=0; i<130; i++ ) {
			farbe(i, farben[i % (sizeof( farben) / sizeof( int )) ] );
		}

		]]></codeA>
  </snippet>
</codes>
